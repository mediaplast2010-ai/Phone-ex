# app.py
# Phone Extractor –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é JavaScript, –∫–ª—ñ–∫—ñ–≤ —ñ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏

import streamlit as st
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException, WebDriverException
import time
import re
import os
from urllib.parse import urlparse

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
st.set_page_config(page_title="üìû Phone Extractor (JS-—Å–∞–π—Ç–∏)", layout="centered")

st.title("üìû Phone Extractor")
st.markdown("–í–≤–µ–¥—ñ—Ç—å URL —Å–∞–π—Ç—É ‚Äî –∑–Ω–∞–π–¥–µ–º–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∏, –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ –≤–æ–Ω–∏ –ø—Ä–∏—Ö–æ–≤–∞–Ω—ñ –∑–∞ –∫–ª—ñ–∫–∞–º–∏")

url = st.text_input("URL —Å–∞–π—Ç—É", placeholder="https://example.com")

# –ö–Ω–æ–ø–∫–∞
if st.button("üîç –ó–Ω–∞–π—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∏"):
    if not url:
        st.warning("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å URL")
    else:
        if not url.startswith("http"):
            url = "https://" + url

        with st.spinner("–í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É... (—Ü–µ –º–æ–∂–µ –∑–∞–π–Ω—è—Ç–∏ 10‚Äì20 —Å–µ–∫—É–Ω–¥)"):
            # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Chrome –¥–ª—è Streamlit
            chrome_options = Options()
            chrome_options.add_argument("--headless")  # –ë–µ–∑ –≤—ñ–∑—É–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            chrome_options.add_argument("--no-sandbox")
            chrome_options.add_argument("--disable-dev-shm-usage")
            chrome_options.add_argument("--disable-gpu")
            chrome_options.add_argument("--window-size=1920,1080")
            chrome_options.add_argument("--disable-extensions")
            chrome_options.add_argument("--disable-plugins")

            driver = None
            try:
                driver = webdriver.Chrome(options=chrome_options)
                driver.get(url)
                st.info("–°—Ç–æ—Ä—ñ–Ω–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞. –ü—Ä–æ–∫—Ä—É—á—É—î–º–æ —Ç–∞ —à—É–∫–∞—î–º–æ –∫–Ω–æ–ø–∫–∏...")

                # –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–æ –∫—ñ–Ω—Ü—è (—ñ–º—ñ—Ç—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞)
                last_height = driver.execute_script("return document.body.scrollHeight")
                for _ in range(5):
                    driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
                    time.sleep(1.5)
                    new_height = driver.execute_script("return document.body.scrollHeight")
                    if new_height == last_height:
                        break
                    last_height = new_height

                # –°–ø–∏—Å–æ–∫ —Ç–µ–∫—Å—Ç—ñ–≤ –∫–Ω–æ–ø–æ–∫, —è–∫—ñ –º–æ–∂—É—Ç—å –ø—Ä–∏—Ö–æ–≤—É–≤–∞—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω
                click_texts = [
                    "–ø–æ–∫–∞–∑–∞—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω", "–ø–æ–∫–∞–∑–∞—Ç–∏ –Ω–æ–º–µ—Ä", "–≤—ñ–¥–∫—Ä–∏—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω",
                    "–≤—ñ–¥–∫—Ä–∏—Ç–∏ –Ω–æ–º–µ—Ä", "–ø–æ–∫–∞–∑–∞—Ç–∏", "–¥–∏–≤–∏—Ç–∏—Å—è", "—Ç–µ–ª–µ—Ñ–æ–Ω",
                    "–Ω–æ–º–µ—Ä", "call", "phone", "show", "–¥–∑–≤—ñ–Ω–æ–∫", "–Ω–∞–ø–∏—Å–∞—Ç–∏"
                ]

                st.info("–®—É–∫–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ —Ç–∏–ø—É '–ü–æ–∫–∞–∑–∞—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω'...")
                buttons_clicked = 0

                for text in click_texts:
                    try:
                        buttons = WebDriverWait(driver, 3).until(
                            EC.presence_of_all_elements_located((By.XPATH, f"//*[contains(translate(text(), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), '{text.lower()}')]"))
                        )
                        for btn in buttons:
                            try:
                                if btn.is_displayed() and btn.is_enabled():
                                    driver.execute_script("arguments[0].scrollIntoView();", btn)
                                    time.sleep(0.5)
                                    btn.click()
                                    buttons_clicked += 1
                                    time.sleep(1)
                            except:
                                continue
                    except TimeoutException:
                        continue

                st.success(f"‚úÖ –ù–∞—Ç–∏—Å–Ω—É—Ç–æ –Ω–∞ {buttons_clicked} –µ–ª–µ–º–µ–Ω—Ç—ñ–≤, —â–æ –º–æ–∂—É—Ç—å –≤—ñ–¥–∫—Ä–∏–≤–∞—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∏")

                # –ß–µ–∫–∞—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
                time.sleep(3)

                # –û—Ç—Ä–∏–º—É—î–º–æ –≤–µ—Å—å —Ç–µ–∫—Å—Ç —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –ø—ñ—Å–ª—è –∫–ª—ñ–∫—ñ–≤
                page_text = driver.page_source

                # –®—É–∫–∞—î–º–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∏
                phone_pattern = r'(\+\d{1,3}[-.\s]?)?\(?(\d{3})\)?[-.\s]?(\d{3})[-.\s]?(\d{4})'
                matches = re.findall(phone_pattern, page_text)
                phones = set()
                for match in matches:
                    phone = ''.join(match)
                    if f"+{phone}" in page_text or str(match[0]).startswith('+'):
                        phone = '+' + phone
                    phones.add(phone)

                phones = sorted(phones)

                if phones:
                    st.success(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ {len(phones)} —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤:")
                    for phone in phones:
                        st.code(phone)

                    # –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
                    full_text = '\n'.join(phones)
                    domain = urlparse(url).netloc
                    st.download_button(
                        label="‚¨áÔ∏è –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —è–∫ .txt",
                        data=full_text,
                        file_name=f"{domain}_phones.txt",
                        mime="text/plain"
                    )
                else:
                    st.info("‚ùå –¢–µ–ª–µ—Ñ–æ–Ω–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ú–æ–∂–ª–∏–≤–æ, —Å–∞–π—Ç –≤–∏–º–∞–≥–∞—î –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Å–∫–ª–∞–¥–Ω–∏–π –∑–∞—Ö–∏—Å—Ç.")

            except WebDriverException as e:
                st.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞: {str(e)}")
                st.info("–°–∞–π—Ç –º–æ–∂–µ –±–ª–æ–∫—É–≤–∞—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–æ–≤–∞–Ω—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏.")
            except Exception as e:
                st.error(f"‚ùå –ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞: {str(e)}")
            finally:
                if driver:
                    driver.quit()

# –§—É—Ç–µ—Ä
st.markdown("---")
st.markdown(
    "üí° <small>–î–æ–¥–∞—Ç–æ–∫ —ñ–º—ñ—Ç—É—î —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: –∫–ª—ñ–∫–∞—î, –ø—Ä–æ–∫—Ä—É—á—É—î. –î–µ—è–∫—ñ —Å–∞–π—Ç–∏ –º–æ–∂—É—Ç—å –±–ª–æ–∫—É–≤–∞—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—é.</small>",
    unsafe_allow_html=True
)