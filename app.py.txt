# app.py
# Phone Extractor ‚Äî —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π –Ω–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö –Ω–æ–º–µ—Ä–∞—Ö (+38, 380, 0–•–•)

import streamlit as st
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
from bs4 import BeautifulSoup
import re
import time
from urllib.parse import urlparse

st.set_page_config(page_title="üìû Phone Extractor UA", layout="centered")
st.title("üìû Phone Extractor UA")
st.markdown("üîç –®—É–∫–∞—î —Ç–µ–ª–µ—Ñ–æ–Ω–∏ –∑ –∫–æ–¥–æ–º **+38** —Ç–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ —Ñ–æ—Ä–º–∞—Ç–∏ (044, 067, 095 —Ç–æ—â–æ)")

urls_input = st.text_area(
    "–°–ø–∏—Å–æ–∫ —Å–∞–π—Ç—ñ–≤",
    placeholder="https://zrada.com.ua\nhttps://prom.ua\nhttps://rozetka.com.ua",
    height=150
)

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
st.sidebar.header("–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è")
delay = st.sidebar.slider("–ó–∞—Ç—Ä–∏–º–∫–∞ –Ω–∞ —Å–∞–π—Ç (—Å–µ–∫)", 3, 10, 7)
show_raw = st.sidebar.checkbox("–ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ —Å–∏—Ä—ñ –¥–∞–Ω—ñ (–¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏)")

if st.button("üîç –ó–Ω–∞–π—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∏"):
    if not urls_input.strip():
        st.warning("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —Ö–æ—á–∞ –± –æ–¥–∏–Ω URL")
    else:
        url_list = [url.strip() for url in urls_input.splitlines() if url.strip()]
        total_urls = len(url_list)
        st.info(f"–û–±—Ä–æ–±–ª—è—î–º–æ {total_urls} —Å–∞–π—Ç—ñ–≤...")

        all_phones = {}
        failed_sites = []
        progress_bar = st.progress(0)
        status_text = st.empty()

        # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Chrome
        chrome_options = Options()
        chrome_options.add_argument("--headless")
        chrome_options.add_argument("--no-sandbox")
        chrome_options.add_argument("--disable-dev-shm-usage")
        chrome_options.add_argument("--disable-gpu")
        chrome_options.add_argument("--window-size=1920,1080")
        chrome_options.add_argument("user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36")

        try:
            service = Service(ChromeDriverManager().install())
            driver = webdriver.Chrome(service=service, options=chrome_options)
        except Exception as e:
            st.error(f"–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É Chrome: {e}")
            st.stop()

        # –£–∫—Ä–∞—ó–Ω–æ-–æ—Ä—ñ—î–Ω—Ç–æ–≤–∞–Ω—ñ –ø–∞—Ç–µ—Ä–Ω–∏
        ua_patterns = [
            r'\+38\s*\(?\d{3}\)?\s*\d{3}[-.\s]\d{2}[-.\s]\d{2}',  # +38 (044) 123-45-67
            r'\+38\s*[0-9\s\-()]+',                               # +38 044 123 45 67
            r'380\s*[0-9\s\-()]+',                                # 380 44 123 45 67
            r'0\s*\(?\d{2,3}\)?\s*\d{3}[-.\s]\d{2}[-.\s]\d{2}',   # 0 (44) 123-45-67
            r'0\d{2}\s*\d{3}[-.\s]\d{2}[-.\s]\d{2}',              # 044 123-45-67
            r'0\d{2}[-]\d{3}[-]\d{2}[-]\d{2}',                    # 044-123-45-67
            r'0\d{9}',                                            # 0441234567
            r'\(0\d{2}\)\s*\d{3}[-.\s]\d{2}[-.\s]\d{2}',          # (044) 123-45-67
            r'–¢–µ–ª–µ—Ñ–æ–Ω[:\s]*[+]?[0-9\s\-()]+',                    # "–¢–µ–ª–µ—Ñ–æ–Ω: 044 123 45 67"
            r'Phone[:\s]*[+]?[0-9\s\-()]+',
        ]

        for i, url in enumerate(url_list):
            status_text.text(f"üåê –û–±—Ä–æ–±–ª—è—î–º–æ: {url}")
            progress_bar.progress((i + 1) / total_urls)

            if not url.startswith("http"):
                url = "https://" + url

            try:
                driver.get(url)
                time.sleep(delay)
                html = driver.page_source
                soup = BeautifulSoup(html, 'html.parser')

                # –û–±'—î–¥–Ω—É—î–º–æ –≤–µ—Å—å —Ç–µ–∫—Å—Ç: HTML + –∞—Ç—Ä–∏–±—É—Ç–∏
                text = html

                phones = set()

                # –ü–æ—à—É–∫ –∑–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–º–∏ –ø–∞—Ç–µ—Ä–Ω–∞–º–∏
                for pattern in ua_patterns:
                    matches = re.finditer(pattern, text, re.IGNORECASE)
                    for match in matches:
                        full_match = match.group(0)
                        # –ß–∏—Å—Ç–∏–º–æ
                        digits = re.sub(r'[^\d]', '', full_match)
                        if len(digits) == 12 and digits.startswith('380'):
                            phone = '+' + digits
                        elif len(digits) == 10 and digits.startswith('0'):
                            phone = '+38' + digits
                        elif len(digits) == 9 and digits.startswith('0'):
                            phone = '+380' + digits
                        else:
                            continue  # –Ω–µ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å
                        phones.add(phone)

                # –ü–æ—à—É–∫ —É tel: –ø–æ—Å–∏–ª–∞–Ω–Ω—è—Ö
                tel_links = soup.find_all(href=lambda x: x and x.startswith("tel:"))
                for link in tel_links:
                    tel = link['href'].replace("tel:", "").strip()
                    digits = re.sub(r'[^\d]', '', tel)
                    if len(digits) == 10 and digits.startswith('0'):
                        phone = '+38' + digits
                        phones.add(phone)
                    elif len(digits) == 12 and digits.startswith('380'):
                        phone = '+' + digits
                        phones.add(phone)

                phones = sorted(phones)
                domain = urlparse(url).netloc
                all_phones[domain] = phones

                if show_raw:
                    with st.expander(f"üìÑ –°–∏—Ä—ñ –¥–∞–Ω—ñ: {domain}"):
                        st.text_area("HTML (—Ñ—Ä–∞–≥–º–µ–Ω—Ç)", html[:2000], height=200)

            except Exception as e:
                failed_sites.append(f"{url} ‚Äî {str(e)}")

        driver.quit()
        status_text.text("‚úÖ –ü–æ—à—É–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        progress_bar.progress(100)

        # –í–∏–≤—ñ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
        if any(phones for phones in all_phones.values()):
            st.success("üìû –ó–Ω–∞–π–¥–µ–Ω—ñ —Ç–µ–ª–µ—Ñ–æ–Ω–∏:")
            full_output = ""
            for domain, phones in all_phones.items():
                if phones:
                    st.markdown(f"### üåê `{domain}`")
                    for phone in phones:
                        st.code(phone)
                    full_output += f"{domain}\n" + "\n".join(phones) + "\n\n"
                else:
                    st.info(f"‚ÑπÔ∏è –ù–∞ `{domain}` —Ç–µ–ª–µ—Ñ–æ–Ω–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
                    full_output += f"{domain}\n(–Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ)\n\n"

            st.download_button(
                label="‚¨áÔ∏è –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –≤—Å—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏",
                data=full_output.strip(),
                file_name="ua_phones_found.txt",
                mime="text/plain"
            )
        else:
            st.warning("‚ùå –¢–µ–ª–µ—Ñ–æ–Ω–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –Ω–∞ –∂–æ–¥–Ω–æ–º—É —Å–∞–π—Ç—ñ.")

        if failed_sites:
            st.error("‚ùå –ü–æ–º–∏–ª–∫–∏:")
            for fail in failed_sites:
                st.markdown(f"- `{fail}`")

st.markdown("---")
st.markdown(
    "üí° <small>–û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–æ –¥–ª—è +38 —Ç–∞ —Ñ–æ—Ä–º–∞—Ç—ñ–≤ 044, 067, 095. –ü—Ä–∞—Ü—é—î –Ω–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö —Å–∞–π—Ç–∞—Ö.</small>",
    unsafe_allow_html=True
)